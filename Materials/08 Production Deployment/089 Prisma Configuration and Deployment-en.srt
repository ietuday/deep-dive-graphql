1
00:00:00,240 --> 00:00:05,670
In this video you're going to be deploying your Prisma application to the server created in the last

2
00:00:05,670 --> 00:00:06,230
video.

3
00:00:06,230 --> 00:00:10,080
So the server is already up and running it's waiting for us to deploy to it.

4
00:00:10,080 --> 00:00:13,590
And we already have our database up and running as well.

5
00:00:13,590 --> 00:00:18,770
So all we have to do is deploy our data model file to that server.

6
00:00:19,020 --> 00:00:24,270
Now in order to get that done we are going to have to make a couple of small changes to our app and

7
00:00:24,270 --> 00:00:31,530
to start I want to crack open our Prisma like email file and talk about what happens when we run that

8
00:00:31,530 --> 00:00:33,660
Prisma deploy command.

9
00:00:33,660 --> 00:00:34,740
So how do we deploy.

10
00:00:34,860 --> 00:00:39,540
Well we go CD Prisma to get into the Prisma project folder.

11
00:00:39,660 --> 00:00:41,800
Then we use Prisma deploy.

12
00:00:41,970 --> 00:00:44,310
But when we run this what happens.

13
00:00:44,310 --> 00:00:47,910
Well it looks at this file to figure out what it should do.

14
00:00:47,940 --> 00:00:52,080
This is where it grabs the data model that it sends to the server.

15
00:00:52,140 --> 00:00:56,110
And this is also where it grabs the server location itself.

16
00:00:56,250 --> 00:00:59,980
Now in this case we've hardcoded this you are well into the file.

17
00:01:00,030 --> 00:01:06,890
That means every single time we run Prisma deploy it's always going to deploy to our local instance.

18
00:01:06,900 --> 00:01:11,760
It's always going to deploy to the docker container we have running on our machine.

19
00:01:11,760 --> 00:01:16,550
There's no way to pick between our local docker container and the production one.

20
00:01:16,650 --> 00:01:17,780
And that's a problem.

21
00:01:17,970 --> 00:01:22,050
So if I actually run Prisma deploy we're going to get the expected output.

22
00:01:22,050 --> 00:01:26,460
It just gives us a little message saying that the service is already up to date.

23
00:01:26,670 --> 00:01:27,710
So how do we fix this.

24
00:01:27,720 --> 00:01:32,490
Well the goal is to have a dynamic value for endpoint.

25
00:01:32,520 --> 00:01:39,090
We can then choose to deploy to development or to production depending on our needs to get this done.

26
00:01:39,090 --> 00:01:45,150
We're going to create 2 configuration files one for development and one for production each with a set

27
00:01:45,180 --> 00:01:51,650
of variables so a set of key value pairs are going to set up an endpoint value for each.

28
00:01:51,720 --> 00:01:55,440
So we'll have two files each with a different endpoint value.

29
00:01:55,590 --> 00:02:00,190
And when we run Prisma deploy we'll load one of those two files in.

30
00:02:00,210 --> 00:02:02,430
So let's see what that looks like in reality.

31
00:02:02,580 --> 00:02:06,700
Well we need to do is create a new director the inside of the graph.

32
00:02:06,700 --> 00:02:10,540
Q Well Prisma folder we can call this whatever we like.

33
00:02:10,560 --> 00:02:17,070
I'm going to go ahead and call it config and in here we're going to create a new configuration file

34
00:02:17,220 --> 00:02:19,940
for each environment we want to deploy to.

35
00:02:19,940 --> 00:02:21,970
In our case there's just two for now.

36
00:02:22,050 --> 00:02:25,090
We're going to have development and we're going to have production.

37
00:02:25,260 --> 00:02:29,990
So the first file can be called dev or development dot envy.

38
00:02:30,240 --> 00:02:36,700
And the second file We're going to create is going to be called Prod. or production dot EMV.

39
00:02:36,870 --> 00:02:41,490
Now in the end of the day we're really only going to have a couple of lines of code in each of these

40
00:02:41,550 --> 00:02:42,790
and that's OK.

41
00:02:42,840 --> 00:02:47,850
Let's go ahead and start with our dev dot envy file.

42
00:02:48,090 --> 00:02:51,850
The format for this file is key equals value.

43
00:02:51,960 --> 00:02:57,940
So here we've essentially created a variable called key and we have the value of value.

44
00:02:58,050 --> 00:03:05,550
We would do something similar over in pride creating key but with a different value allowing us to customize

45
00:03:05,550 --> 00:03:08,640
the variable values between environments.

46
00:03:08,640 --> 00:03:11,660
Now let's go ahead and actually create a meaningful one.

47
00:03:11,700 --> 00:03:14,890
We're going to create one for that Prisma endpoint.

48
00:03:14,890 --> 00:03:23,100
So right here I'm going to call this Prisma underscore end point and we are going to set it equal to

49
00:03:23,280 --> 00:03:24,060
the U r l.

50
00:03:24,060 --> 00:03:25,220
We're already using.

51
00:03:25,230 --> 00:03:29,740
So for development we do indeed want to deploy to this you RL.

52
00:03:29,790 --> 00:03:34,890
So let's copy it bring it over to dev dot envy and paste it in.

53
00:03:34,920 --> 00:03:41,730
Make sure you don't have any stray spaces or extra characters as that will affect the functionality

54
00:03:41,820 --> 00:03:42,730
of our program.

55
00:03:42,780 --> 00:03:43,920
When we try to deploy.

56
00:03:43,950 --> 00:03:49,720
Now the question is how do we access this variable inside of Prisma dot wya now.

57
00:03:49,740 --> 00:03:52,710
So this value gets used for the endpoint.

58
00:03:52,860 --> 00:03:58,290
While over in this file We're going to do is remove the hard coded value and we're going to use the

59
00:03:58,290 --> 00:03:59,660
following syntax.

60
00:03:59,670 --> 00:04:02,900
It's a dollar sign followed by curly braces.

61
00:04:02,910 --> 00:04:08,940
This allows us to inject things inside and we're going to inject in one of our environment variables

62
00:04:08,970 --> 00:04:11,520
and to do that we use the following syntax.

63
00:04:11,580 --> 00:04:16,500
It's NVI colon followed by the variable name we called ours.

64
00:04:16,560 --> 00:04:19,080
Prisma underscore end point.

65
00:04:19,080 --> 00:04:26,020
So over here we are going to type in Prisma underscore and point perfect.

66
00:04:26,040 --> 00:04:33,090
Now when we deploy and we tell Prisma to use this environment file it's still going to be able to deploy

67
00:04:33,150 --> 00:04:35,070
to development just fine.

68
00:04:35,160 --> 00:04:37,440
Let's go ahead and actually test that out.

69
00:04:37,440 --> 00:04:43,680
I'm going to save all three files even though the prod environment file has nothing inside of it.

70
00:04:43,890 --> 00:04:49,130
And we're going to run Prisma deploy but we're not going to run Prisma deploy on its own.

71
00:04:49,290 --> 00:04:52,860
We're also going to specify the easy argument.

72
00:04:52,980 --> 00:04:54,600
So that's hyphen e.

73
00:04:54,810 --> 00:05:01,980
This lets us provide the path to the configuration file we want to use right after the argument itself.

74
00:05:02,000 --> 00:05:08,580
So that's hyphen eat space followed by the path to dev Dom envy.

75
00:05:08,600 --> 00:05:11,040
So we are currently in the Prisma directory.

76
00:05:11,210 --> 00:05:17,420
I'm going to use dot dot to get out of that folder then forward slash config forwards slash and then

77
00:05:17,420 --> 00:05:17,990
right here.

78
00:05:17,990 --> 00:05:19,770
Dev dot envy.

79
00:05:19,820 --> 00:05:20,700
Perfect.

80
00:05:20,720 --> 00:05:27,170
So in this case it is going to first load in all of the environment variables here then it's going to

81
00:05:27,170 --> 00:05:29,170
inject those into this file.

82
00:05:29,210 --> 00:05:34,850
Then it's actually going to deploy and the end result is exactly what we had before.

83
00:05:34,850 --> 00:05:38,990
So this command can be used to deploy to development.

84
00:05:38,990 --> 00:05:42,150
Now the question is how do we deploy to production.

85
00:05:42,170 --> 00:05:46,580
We're not really sure what you Arel value to put inside of this file.

86
00:05:46,610 --> 00:05:51,100
And the answer is that we're not going to put any value inside of that file.

87
00:05:51,170 --> 00:05:55,260
We're going to let Prisma inject the you R-AL for us.

88
00:05:55,280 --> 00:05:57,510
Now there are two steps to getting this done.

89
00:05:57,530 --> 00:06:03,860
The first thing we have to do is log into Prisma using the command line interface not just anyone is

90
00:06:03,860 --> 00:06:06,320
going to be able to deploy to our server.

91
00:06:06,320 --> 00:06:12,140
We have to first confirm who we are so it can pull in all the servers we have access to to log in all

92
00:06:12,140 --> 00:06:15,810
we do is from the terminal run Prisma line again.

93
00:06:15,860 --> 00:06:19,450
This is going to require us to pull up a page in the browser.

94
00:06:19,520 --> 00:06:25,430
The browser might automatically open it for you and all you have to do is click grant permission if

95
00:06:25,430 --> 00:06:27,470
the page didn't automatically open.

96
00:06:27,500 --> 00:06:32,390
You can just grab the you Arel that spit out in the terminal and open that manually.

97
00:06:32,510 --> 00:06:34,210
We click grant permission.

98
00:06:34,280 --> 00:06:39,860
It tells us we can close the window and if we head back to the command line interface we can see the

99
00:06:39,860 --> 00:06:42,660
authentication completed successfully.

100
00:06:42,710 --> 00:06:48,230
You can always check if your authenticated by just trying to log in again and you'll get a message saying

101
00:06:48,230 --> 00:06:50,310
that you successfully signed in.

102
00:06:50,510 --> 00:06:52,970
So now we are indeed logged in.

103
00:06:53,030 --> 00:06:57,200
Which means that we're going to have access to that server we created.

104
00:06:57,200 --> 00:07:00,410
Next up we have to go ahead and run Prisma deploy.

105
00:07:00,500 --> 00:07:05,750
This time though we're going to tell it to use our production ENVI file even though it's completely

106
00:07:05,750 --> 00:07:06,150
empty.

107
00:07:06,140 --> 00:07:13,620
So right here Prisma deploy we provide that e flag setting up the path to that file.

108
00:07:13,620 --> 00:07:14,550
That's dot dot.

109
00:07:14,550 --> 00:07:19,010
Forward slash config forward slash Prod. dot E and V.

110
00:07:19,230 --> 00:07:24,630
Now when we do this what's going to happen while it's going to try to inject all of the variables from

111
00:07:24,630 --> 00:07:31,590
this file into this file since there are no variables in our ENVI file all of the values over here are

112
00:07:31,590 --> 00:07:33,170
going to end up being blank.

113
00:07:33,180 --> 00:07:38,160
So it's like we have no you Arel at all when the file actually runs.

114
00:07:38,430 --> 00:07:41,070
Let's go ahead and run that and see what happens.

115
00:07:41,100 --> 00:07:47,250
What happens is that it asks us to pick from a list of the servers we have and we're gonna pick the

116
00:07:47,250 --> 00:07:49,580
one we created right here I have mine.

117
00:07:49,680 --> 00:07:52,100
I called it Andrew Meade blogging app.

118
00:07:52,110 --> 00:07:53,870
You're going to have your name in there.

119
00:07:53,940 --> 00:07:55,530
You can pick that item.

120
00:07:55,620 --> 00:08:00,810
Hit enter and next up it's going to ask us for a couple other pieces of information.

121
00:08:00,930 --> 00:08:03,090
We're going to choose a name for our service.

122
00:08:03,090 --> 00:08:07,700
Let's go ahead and customize it as opposed to using Prisma which is the default.

123
00:08:07,770 --> 00:08:09,770
I'm going to call this once again.

124
00:08:09,810 --> 00:08:14,460
Andrew Mead blogging app.

125
00:08:14,460 --> 00:08:17,120
And next up it's going to ask us for a stage.

126
00:08:17,130 --> 00:08:19,710
So are we in development testing production.

127
00:08:19,710 --> 00:08:20,770
What is this.

128
00:08:20,790 --> 00:08:22,840
In this case we are in production.

129
00:08:22,950 --> 00:08:27,870
So let's use Prod. I'm going to hit enter and now what happens.

130
00:08:27,870 --> 00:08:29,500
Well a couple of things happen.

131
00:08:29,550 --> 00:08:35,250
First up we can see it says Our End Point has been written and it shows us the file it's been written

132
00:08:35,250 --> 00:08:35,750
to.

133
00:08:35,790 --> 00:08:37,730
It's actually right up above.

134
00:08:37,770 --> 00:08:44,250
The next thing it's going to do is it's actually going to try to deploy to the server that Prisma cloud

135
00:08:44,310 --> 00:08:45,370
created.

136
00:08:45,390 --> 00:08:49,600
Now this process can take a little bit of time and that's perfectly normal.

137
00:08:49,620 --> 00:08:53,160
The first time around down below the process has completed.

138
00:08:53,190 --> 00:08:58,160
And what we're seeing is the same sort of output we would see if we deployed to development.

139
00:08:58,290 --> 00:09:00,290
It's showing us exactly what it did.

140
00:09:00,360 --> 00:09:03,570
All of the fields that were created as expected.

141
00:09:03,600 --> 00:09:08,010
And once again we do indeed have that you are well written up above.

142
00:09:08,010 --> 00:09:11,280
So this you RL is pretty important for our purposes.

143
00:09:11,280 --> 00:09:17,010
What we want to do is NOT leave it in this file where I wrote it we want to bring this over to prod

144
00:09:17,010 --> 00:09:18,310
dot envy.

145
00:09:18,330 --> 00:09:22,790
So what the command did is it commented out our other end point and it added this one in.

146
00:09:23,100 --> 00:09:28,820
We're going to take this you r l and copy it to the clipboard we're then going to go over to prod dot

147
00:09:28,890 --> 00:09:35,900
envy and set up Prisma underscore end point sending it equal to the you Arel we just copied.

148
00:09:35,910 --> 00:09:41,480
So now both files have a Prisma end point with different values which is good.

149
00:09:41,550 --> 00:09:48,990
And over in Prisma lie M-L we can now remove entirely the line that was generated for us and we can

150
00:09:49,110 --> 00:09:51,800
uncomment the line that we created.

151
00:09:51,810 --> 00:09:56,190
Now when we deploy to production it's not going to have to do anything like that again.

152
00:09:56,310 --> 00:10:03,030
All we do is we run the command with the EMV file the exact same command we ran moments ago and this

153
00:10:03,030 --> 00:10:04,950
time we get the expected output.

154
00:10:05,010 --> 00:10:11,160
We can see it deployed to the correct service and we have our little message saying that nothing happened

155
00:10:11,160 --> 00:10:13,320
because it's already up to date.

156
00:10:13,470 --> 00:10:14,470
And there we go.

157
00:10:14,490 --> 00:10:20,130
We now have a system for deploying to development when that's what we want and for deploying to production

158
00:10:20,280 --> 00:10:21,660
when that's what we want.

159
00:10:21,660 --> 00:10:27,000
Now that we have deployed to production let's head back over to Prisma cloud and see what we have.

160
00:10:27,000 --> 00:10:30,940
If I go over to the dashboard and go under servers nothing's changed.

161
00:10:31,050 --> 00:10:37,890
But if I head over to services we now have a service before we had no services right here the service

162
00:10:37,890 --> 00:10:44,640
name Andrew Meade blogging app and the stage production both things we configured when the command line

163
00:10:44,640 --> 00:10:50,460
asked us for those values and we can also see the server it's associated with and everything is working

164
00:10:50,460 --> 00:10:51,260
really well.

165
00:10:51,300 --> 00:10:57,300
No requests so far but we're going to change that in the next video in the next video we're actually

166
00:10:57,300 --> 00:11:00,130
going to mess around with this production service.

167
00:11:00,240 --> 00:11:05,210
Reading and writing data from our production database I'm excited to get to that.

168
00:11:05,220 --> 00:11:08,780
So let's go ahead and jump right in to the next video.

